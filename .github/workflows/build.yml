name: Manual Cross‚Äëplatform Build¬†+ Release Shotgun¬†Code

on:
  workflow_dispatch:

permissions:
  contents: write          # <‚Äë‚Äë –≤–∞–∂–Ω–æ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–ª–∏–∑–æ–≤

env:
  NODE_OPTIONS: "--max-old-space-size=4096"

jobs:
# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ BUILD MATRIX ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          # ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ Linux ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
          - os: ubuntu-latest
            platform: linux/amd64
            build_name: shotgun-code-linux-amd64
            artifact_name: shotgun_code-linux-amd64

          # ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ Windows ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
          - os: windows-latest
            platform: windows/amd64
            build_name: shotgun-code-windows-amd64.exe
            artifact_name: shotgun_code-windows-amd64

          # ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ macOS ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
          - os: macos-latest
            platform: darwin/arm64
            build_name: shotgun-code
            artifact_name: shotgun_code-darwin-arm64   # .app —É–∂–µ –≤ zip

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: main
          submodules: recursive

      - name: Build Wails app (${{ matrix.platform }})
        uses: dAppServer/wails-build-action@main
        with:
          build-name: ${{ matrix.build_name }}
          build-platform: ${{ matrix.platform }}
          go-version: '1.24'
          package: true        # action —Å–∞–º —É–ø–∞–∫—É–µ—Ç (zip/7z) –∏ –ø–æ–ª–æ–∂–∏—Ç –≤ build/bin

      - name: Upload binaries
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}   # –æ–¥–Ω–æ –∏–º—è ‚Äë –æ–¥–∏–Ω —Ñ–∞–π–ª
          path: build/bin/**                  # *.zip, *.exe, *.app.zip ‚Ä¶

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ CREATE RELEASE ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download all artifacts from build job
        uses: actions/download-artifact@v4
        with:
          path: release‚Äëassets           # –≤—Å–µ —Ñ–∞–π–ª—ã –æ–∫–∞–∂—É—Ç—Å—è –≤ —ç—Ç–æ–π –ø–∞–ø–∫–µ

      - name: Prepare tag & release information
        id: prep
        run: |
          TAG="v$(date -u '+%Y.%m.%d')-${GITHUB_SHA::7}"
          echo "tag_name=$TAG"            >> $GITHUB_OUTPUT
          echo "release_name=Shotgun¬†Code $TAG" >> $GITHUB_OUTPUT

      - name: Create GitHub Release and upload assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name:    ${{ steps.prep.outputs.tag_name }}
          name:        ${{ steps.prep.outputs.release_name }}
          body: |
            üî® –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–±–æ—Ä–∫–∞ –æ—Ç commit ${{ github.sha }}
            ‚Ä¢ Linux, Windows, macOS  
            ‚Ä¢ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ GitHub¬†Actions
          draft: false
          prerelease: false
          files: |
            release‚Äëassets/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
